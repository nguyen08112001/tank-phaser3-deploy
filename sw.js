(()=>{"use strict";var e={913:()=>{try{self["workbox:core:6.5.2"]&&_()}catch(e){}},977:()=>{try{self["workbox:precaching:6.5.2"]&&_()}catch(e){}},80:()=>{try{self["workbox:routing:6.5.2"]&&_()}catch(e){}},873:()=>{try{self["workbox:strategies:6.5.2"]&&_()}catch(e){}}},t={};function s(a){var n=t[a];if(void 0!==n)return n.exports;var r=t[a]={exports:{}};return e[a](r,r.exports,s),r.exports}(()=>{s(913);class e extends Error{constructor(e,t){super(((e,...t)=>{let s=e;return t.length>0&&(s+=` :: ${JSON.stringify(t)}`),s})(e,t)),this.name=e,this.details=t}}const t={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},a=e=>[t.prefix,e,t.suffix].filter((e=>e&&e.length>0)).join("-"),n=e=>e||a(t.precache);function r(e,t){const s=t();return e.waitUntil(s),s}function i(t){if(!t)throw new e("add-to-cache-list-unexpected-type",{entry:t});if("string"==typeof t){const e=new URL(t,location.href);return{cacheKey:e.href,url:e.href}}const{revision:s,url:a}=t;if(!a)throw new e("add-to-cache-list-unexpected-type",{entry:t});if(!s){const e=new URL(a,location.href);return{cacheKey:e.href,url:e.href}}const n=new URL(a,location.href),r=new URL(a,location.href);return n.searchParams.set("__WB_REVISION__",s),{cacheKey:n.href,url:r.href}}s(977);class c{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:s})=>{if("install"===e.type&&t&&t.originalRequest&&t.originalRequest instanceof Request){const e=t.originalRequest.url;s?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return s}}}class o{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:e,params:t})=>{const s=(null==t?void 0:t.cacheKey)||this._precacheController.getCacheKeyForURL(e.url);return s?new Request(s,{headers:e.headers}):e},this._precacheController=e}}let h;function l(e,t){const s=new URL(e);for(const e of t)s.searchParams.delete(e);return s.href}class u{constructor(){this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}}const d=new Set;function f(e){return"string"==typeof e?new Request(e):e}s(873);class p{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new u,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const e of this._plugins)this._pluginStateMap.set(e,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(t){const{event:s}=this;let a=f(t);if("navigate"===a.mode&&s instanceof FetchEvent&&s.preloadResponse){const e=await s.preloadResponse;if(e)return e}const n=this.hasCallback("fetchDidFail")?a.clone():null;try{for(const e of this.iterateCallbacks("requestWillFetch"))a=await e({request:a.clone(),event:s})}catch(t){if(t instanceof Error)throw new e("plugin-error-request-will-fetch",{thrownErrorMessage:t.message})}const r=a.clone();try{let e;e=await fetch(a,"navigate"===a.mode?void 0:this._strategy.fetchOptions);for(const t of this.iterateCallbacks("fetchDidSucceed"))e=await t({event:s,request:r,response:e});return e}catch(e){throw n&&await this.runCallbacks("fetchDidFail",{error:e,event:s,originalRequest:n.clone(),request:r.clone()}),e}}async fetchAndCachePut(e){const t=await this.fetch(e),s=t.clone();return this.waitUntil(this.cachePut(e,s)),t}async cacheMatch(e){const t=f(e);let s;const{cacheName:a,matchOptions:n}=this._strategy,r=await this.getCacheKey(t,"read"),i=Object.assign(Object.assign({},n),{cacheName:a});s=await caches.match(r,i);for(const e of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await e({cacheName:a,matchOptions:n,cachedResponse:s,request:r,event:this.event})||void 0;return s}async cachePut(t,s){const a=f(t);await(0,new Promise((e=>setTimeout(e,0))));const n=await this.getCacheKey(a,"write");if(!s)throw new e("cache-put-with-no-response",{url:(r=n.url,new URL(String(r),location.href).href.replace(new RegExp(`^${location.origin}`),""))});var r;const i=await this._ensureResponseSafeToCache(s);if(!i)return!1;const{cacheName:c,matchOptions:o}=this._strategy,h=await self.caches.open(c),u=this.hasCallback("cacheDidUpdate"),p=u?await async function(e,t,s,a){const n=l(t.url,s);if(t.url===n)return e.match(t,a);const r=Object.assign(Object.assign({},a),{ignoreSearch:!0}),i=await e.keys(t,r);for(const t of i)if(n===l(t.url,s))return e.match(t,a)}(h,n.clone(),["__WB_REVISION__"],o):null;try{await h.put(n,u?i.clone():i)}catch(e){if(e instanceof Error)throw"QuotaExceededError"===e.name&&await async function(){for(const e of d)await e()}(),e}for(const e of this.iterateCallbacks("cacheDidUpdate"))await e({cacheName:c,oldResponse:p,newResponse:i.clone(),request:n,event:this.event});return!0}async getCacheKey(e,t){const s=`${e.url} | ${t}`;if(!this._cacheKeys[s]){let a=e;for(const e of this.iterateCallbacks("cacheKeyWillBeUsed"))a=f(await e({mode:t,request:a,event:this.event,params:this.params}));this._cacheKeys[s]=a}return this._cacheKeys[s]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const s of this.iterateCallbacks(e))await s(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if("function"==typeof t[e]){const s=this._pluginStateMap.get(t),a=a=>{const n=Object.assign(Object.assign({},a),{state:s});return t[e](n)};yield a}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,s=!1;for(const e of this.iterateCallbacks("cacheWillUpdate"))if(t=await e({request:this.request,response:t,event:this.event})||void 0,s=!0,!t)break;return s||t&&200!==t.status&&(t=void 0),t}}class g extends class{constructor(e={}){this.cacheName=e.cacheName||a(t.runtime),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,s="string"==typeof e.request?new Request(e.request):e.request,a="params"in e?e.params:void 0,n=new p(this,{event:t,request:s,params:a}),r=this._getResponse(n,s,t);return[r,this._awaitComplete(r,n,s,t)]}async _getResponse(t,s,a){let n;await t.runCallbacks("handlerWillStart",{event:a,request:s});try{if(n=await this._handle(s,t),!n||"error"===n.type)throw new e("no-response",{url:s.url})}catch(e){if(e instanceof Error)for(const r of t.iterateCallbacks("handlerDidError"))if(n=await r({error:e,event:a,request:s}),n)break;if(!n)throw e}for(const e of t.iterateCallbacks("handlerWillRespond"))n=await e({event:a,request:s,response:n});return n}async _awaitComplete(e,t,s,a){let n,r;try{n=await e}catch(r){}try{await t.runCallbacks("handlerDidRespond",{event:a,request:s,response:n}),await t.doneWaiting()}catch(e){e instanceof Error&&(r=e)}if(await t.runCallbacks("handlerDidComplete",{event:a,request:s,response:n,error:r}),t.destroy(),r)throw r}}{constructor(e={}){e.cacheName=n(e.cacheName),super(e),this._fallbackToNetwork=!1!==e.fallbackToNetwork,this.plugins.push(g.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){return await t.cacheMatch(e)||(t.event&&"install"===t.event.type?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(t,s){let a;const n=s.params||{};if(!this._fallbackToNetwork)throw new e("missing-precache-entry",{cacheName:this.cacheName,url:t.url});{const e=n.integrity,r=t.integrity,i=!r||r===e;a=await s.fetch(new Request(t,{integrity:r||e})),e&&i&&(this._useDefaultCacheabilityPluginIfNeeded(),await s.cachePut(t,a.clone()))}return a}async _handleInstall(t,s){this._useDefaultCacheabilityPluginIfNeeded();const a=await s.fetch(t);if(!await s.cachePut(t,a.clone()))throw new e("bad-precaching-response",{url:t.url,status:a.status});return a}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[s,a]of this.plugins.entries())a!==g.copyRedirectedCacheableResponsesPlugin&&(a===g.defaultPrecacheCacheabilityPlugin&&(e=s),a.cacheWillUpdate&&t++);0===t?this.plugins.push(g.defaultPrecacheCacheabilityPlugin):t>1&&null!==e&&this.plugins.splice(e,1)}}g.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:e})=>!e||e.status>=400?null:e},g.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:t})=>t.redirected?await async function(t,s){let a=null;if(t.url&&(a=new URL(t.url).origin),a!==self.location.origin)throw new e("cross-origin-copy-response",{origin:a});const n=t.clone(),r={headers:new Headers(n.headers),status:n.status,statusText:n.statusText},i=s?s(r):r,c=function(){if(void 0===h){const e=new Response("");if("body"in e)try{new Response(e.body),h=!0}catch(e){h=!1}h=!1}return h}()?n.body:await n.blob();return new Response(c,i)}(t):t};class y{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:s=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new g({cacheName:n(e),plugins:[...t,new o({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(t){const s=[];for(const a of t){"string"==typeof a?s.push(a):a&&void 0===a.revision&&s.push(a.url);const{cacheKey:t,url:n}=i(a),r="string"!=typeof a&&a.revision?"reload":"default";if(this._urlsToCacheKeys.has(n)&&this._urlsToCacheKeys.get(n)!==t)throw new e("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(n),secondEntry:t});if("string"!=typeof a&&a.integrity){if(this._cacheKeysToIntegrities.has(t)&&this._cacheKeysToIntegrities.get(t)!==a.integrity)throw new e("add-to-cache-list-conflicting-integrities",{url:n});this._cacheKeysToIntegrities.set(t,a.integrity)}if(this._urlsToCacheKeys.set(n,t),this._urlsToCacheModes.set(n,r),s.length>0){const e=`Workbox is precaching URLs without revision info: ${s.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}install(e){return r(e,(async()=>{const t=new c;this.strategy.plugins.push(t);for(const[t,s]of this._urlsToCacheKeys){const a=this._cacheKeysToIntegrities.get(s),n=this._urlsToCacheModes.get(t),r=new Request(t,{integrity:a,cache:n,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:s},request:r,event:e}))}const{updatedURLs:s,notUpdatedURLs:a}=t;return{updatedURLs:s,notUpdatedURLs:a}}))}activate(e){return r(e,(async()=>{const e=await self.caches.open(this.strategy.cacheName),t=await e.keys(),s=new Set(this._urlsToCacheKeys.values()),a=[];for(const n of t)s.has(n.url)||(await e.delete(n),a.push(n.url));return{deletedURLs:a}}))}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s)return(await self.caches.open(this.strategy.cacheName)).match(s)}createHandlerBoundToURL(t){const s=this.getCacheKeyForURL(t);if(!s)throw new e("non-precached-url",{url:t});return e=>(e.request=new Request(t),e.params=Object.assign({cacheKey:s},e.params),this.strategy.handle(e))}}let w;const m=()=>(w||(w=new y),w);s(80);const _=e=>e&&"object"==typeof e?e:{handle:e};class R{constructor(e,t,s="GET"){this.handler=_(t),this.match=e,this.method=s}setCatchHandler(e){this.catchHandler=_(e)}}class v extends R{constructor(e,t,s){super((({url:t})=>{const s=e.exec(t.href);if(s&&(t.origin===location.origin||0===s.index))return s.slice(1)}),t,s)}}class C{constructor(){this._routes=new Map,this._defaultHandlerMap=new Map}get routes(){return this._routes}addFetchListener(){self.addEventListener("fetch",(e=>{const{request:t}=e,s=this.handleRequest({request:t,event:e});s&&e.respondWith(s)}))}addCacheListener(){self.addEventListener("message",(e=>{if(e.data&&"CACHE_URLS"===e.data.type){const{payload:t}=e.data,s=Promise.all(t.urlsToCache.map((t=>{"string"==typeof t&&(t=[t]);const s=new Request(...t);return this.handleRequest({request:s,event:e})})));e.waitUntil(s),e.ports&&e.ports[0]&&s.then((()=>e.ports[0].postMessage(!0)))}}))}handleRequest({request:e,event:t}){const s=new URL(e.url,location.href);if(!s.protocol.startsWith("http"))return;const a=s.origin===location.origin,{params:n,route:r}=this.findMatchingRoute({event:t,request:e,sameOrigin:a,url:s});let i=r&&r.handler;const c=e.method;if(!i&&this._defaultHandlerMap.has(c)&&(i=this._defaultHandlerMap.get(c)),!i)return;let o;try{o=i.handle({url:s,request:e,event:t,params:n})}catch(e){o=Promise.reject(e)}const h=r&&r.catchHandler;return o instanceof Promise&&(this._catchHandler||h)&&(o=o.catch((async a=>{if(h)try{return await h.handle({url:s,request:e,event:t,params:n})}catch(e){e instanceof Error&&(a=e)}if(this._catchHandler)return this._catchHandler.handle({url:s,request:e,event:t});throw a}))),o}findMatchingRoute({url:e,sameOrigin:t,request:s,event:a}){const n=this._routes.get(s.method)||[];for(const r of n){let n;const i=r.match({url:e,sameOrigin:t,request:s,event:a});if(i)return n=i,(Array.isArray(n)&&0===n.length||i.constructor===Object&&0===Object.keys(i).length||"boolean"==typeof i)&&(n=void 0),{route:r,params:n}}return{}}setDefaultHandler(e,t="GET"){this._defaultHandlerMap.set(t,_(e))}setCatchHandler(e){this._catchHandler=_(e)}registerRoute(e){this._routes.has(e.method)||this._routes.set(e.method,[]),this._routes.get(e.method).push(e)}unregisterRoute(t){if(!this._routes.has(t.method))throw new e("unregister-route-but-not-found-with-method",{method:t.method});const s=this._routes.get(t.method).indexOf(t);if(!(s>-1))throw new e("unregister-route-route-not-registered");this._routes.get(t.method).splice(s,1)}}let b;class q extends R{constructor(e,t){super((({request:s})=>{const a=e.getURLsToCacheKeys();for(const n of function*(e,{ignoreURLParametersMatching:t=[/^utm_/,/^fbclid$/],directoryIndex:s="index.html",cleanURLs:a=!0,urlManipulation:n}={}){const r=new URL(e,location.href);r.hash="",yield r.href;const i=function(e,t=[]){for(const s of[...e.searchParams.keys()])t.some((e=>e.test(s)))&&e.searchParams.delete(s);return e}(r,t);if(yield i.href,s&&i.pathname.endsWith("/")){const e=new URL(i.href);e.pathname+=s,yield e.href}if(a){const e=new URL(i.href);e.pathname+=".html",yield e.href}if(n){const e=n({url:r});for(const t of e)yield t.href}}(s.url,t)){const t=a.get(n);if(t)return{cacheKey:t,integrity:e.getIntegrityForCacheKey(t)}}}),e.strategy)}}var U;U=[{'revision':'009fe91c905c585d49e7dfb5de17ef5b','url':'assets/.DS_Store'},{'revision':'b9bb58144606336efcd4862d35482f47','url':'assets/Buttons/Achievements.png'},{'revision':'661cfd0fdba294a951eb63c556684a64','url':'assets/Buttons/Back.png'},{'revision':'5c3a207383c5642288b01d314855a42a','url':'assets/Buttons/Close.png'},{'revision':'e3854b8ad5633b1f8017d08b7a783047','url':'assets/Buttons/Leaderboard.png'},{'revision':'5364f08108b6f75ff31b5b7c84f9789a','url':'assets/Buttons/Levels.png'},{'revision':'2f75777c57c36c83c6140bbd7b97a5e1','url':'assets/Buttons/Next.png'},{'revision':'23f2b2a41eb467518bbfef795d876dc8','url':'assets/Buttons/Play.png'},{'revision':'c63a3a14721d926b03801f38b81b66a6','url':'assets/Buttons/Previous.png'},{'revision':'45fe1343f546485e8e288b122467f2fd','url':'assets/Buttons/Restart.png'},{'revision':'a56908d71e428647c51e73af372739ab','url':'assets/Buttons/Settings.png'},{'revision':'60060aab64ff40a0a996820f64a308b3','url':'assets/Buttons/Volume.png'},{'revision':'6ccd1081cb66c5f555c31cf0e78a9831','url':'assets/audios/.DS_Store'},{'revision':'37272f404bed854d51425f5edb37bd33','url':'assets/audios/explosion.wav'},{'revision':'c60576c57e0b3646cd4da4342e3e1ca5','url':'assets/audios/hit.mp3'},{'revision':'b797e4b302d24bb1ca19425c39748983','url':'assets/audios/shoot.mp3'},{'revision':'3100e7c62d8266d784c78f315b79eaa7','url':'assets/blue.cur'},{'revision':'8c2059360f212810887f8cef8a340996','url':'assets/bluee.cur'},{'revision':'fd002a68c34bffe8d89d280bb4f15da9','url':'assets/font/.DS_Store'},{'revision':'d7b98c450349bef0631c7229b804a5c7','url':'assets/font/Minecraft.ttf'},{'revision':'d34be16d470bd35b4be83abb9a8cfce3','url':'assets/font/font.fnt'},{'revision':'6d5d0b5a5653ce9a7b604f4b06df9849','url':'assets/font/font.png'},{'revision':'a64c326c1f8f5a2927b0fea8bd82a158','url':'assets/font/orangekid.ttf'},{'revision':'3f238321a65fe05dac6251ff44098a60','url':'assets/joystick/Joystick.png'},{'revision':'a0a0f2c10de67e7b0b70cc282d54c4fd','url':'assets/joystick/JoystickPack Preview.png'},{'revision':'73f5c717b74473fd14266a2f5f7dd72e','url':'assets/joystick/JoystickPack.png'},{'revision':'a6b7d15379ac5a6d25b29e7f9ff291d2','url':'assets/joystick/JoystickSplitted.png'},{'revision':'ad72cdaae9fcd807cb369b37c881fef6','url':'assets/joystick/LargeHandleFilled.png'},{'revision':'2063a43a96089dead4f226b6d931f88e','url':'assets/joystick/LargeHandleFilledGrey.png'},{'revision':'aa31a0ac9e4b513711b3f2c65d4935fb','url':'assets/joystick/SmallHandle.png'},{'revision':'c23ac91d8086e37bdf2cf0b1ba5b6a56','url':'assets/joystick/SmallHandleFilled.png'},{'revision':'5278579d4a8bcca137e61c16bd451744','url':'assets/joystick/SmallHandleFilledGrey.png'},{'revision':'bb34f6f364908386aa9a9f523d16ea56','url':'assets/maps/levelMap.json'},{'revision':'4d6ff601e3ca92874a0f25f8b146222d','url':'assets/obstacles/barrel-grey-side-rust.png'},{'revision':'4b9da85b96ddde14aab85f1b11ad1d09','url':'assets/obstacles/barrel-grey-side.png'},{'revision':'c9e80b715ecbab4eb6b6697aa5bdd45f','url':'assets/obstacles/barrel-grey-top.png'},{'revision':'4c6b9bf95d24625cfe7615c489e4929c','url':'assets/obstacles/barrel-red-side.png'},{'revision':'02a4ed01696099b3207f3e30e9e68812','url':'assets/obstacles/barrel-red-top.png'},{'revision':'a2829377942dd145eb99eec5b850d4a2','url':'assets/obstacles/tree-large.png'},{'revision':'906e0f210bb1aaf44e310844f7bbf696','url':'assets/obstacles/tree-small.png'},{'revision':'7d7c48425287ee5ed0daf4cfa635cdf9','url':'assets/pack.json'},{'revision':'953cdf2ad1a85fd346e9b211fa7aeaa9','url':'assets/sprites/.DS_Store'},{'revision':'4a9637b5f80dfa25f6610992a8d9be35','url':'assets/sprites/50x50-black.png'},{'revision':'cfc22f7b35a49140acee8813c8dd1bca','url':'assets/sprites/GameOver.jpeg'},{'revision':'ad81343755361f24fb7a573ec4af7cce','url':'assets/sprites/anims.json'},{'revision':'7ea4164875bab0bea4ffb62996c8ad59','url':'assets/sprites/arrow.png'},{'revision':'64758bf0cf6ee25d901c260184fb41ee','url':'assets/sprites/barrel-blue.png'},{'revision':'81bc804aae2018b3ae9e610d99a8d216','url':'assets/sprites/barrel-red.png'},{'revision':'431b99d2aa2576def6aa2b940c6fff1f','url':'assets/sprites/blue.png'},{'revision':'453b32ae2f800959a6c758a0b3bbeeaa','url':'assets/sprites/bomb.png'},{'revision':'00158066ebb349ffdadcdc81b3d130e2','url':'assets/sprites/bullet-blue.png'},{'revision':'4a273b23250f63b3f06eda3fa38f0926','url':'assets/sprites/bullet-red.png'},{'revision':'9cdd1c14c6083e20e1ee21f7163ff1e8','url':'assets/sprites/explosion.json'},{'revision':'77adb8a9aaf81f9c569bd8e6016d4c55','url':'assets/sprites/explosion.png'},{'revision':'8e240a8507243a4f9c004bf3c91e1400','url':'assets/sprites/fire.png'},{'revision':'60d2215bdb819a9b6166a99cb2545284','url':'assets/sprites/flares.json'},{'revision':'587b045c9c55398b6f1dd00c2ab13995','url':'assets/sprites/flares.png'},{'revision':'a4cbe804a85f3cb04dbb35e8559f69bd','url':'assets/sprites/healing-effect.png'},{'revision':'3807a199b0e774a840c9b6668448a77b','url':'assets/sprites/hud-target-red.png'},{'revision':'50c6e7411689e16fd5ba612c7129304c','url':'assets/sprites/hud-target.png'},{'revision':'888a9a88a07fa4f3d0e2d39a9d5ffdfd','url':'assets/sprites/lightning-ball.png'},{'revision':'4e5d9cbfd3adb6059df7b26abd40e325','url':'assets/sprites/move-arrow.png'},{'revision':'9cc247f64bb2e4d389589c8f157b9c55','url':'assets/sprites/pause.avif'},{'revision':'988b2908c0a39b4586a187e2958915d1','url':'assets/sprites/red.png'},{'revision':'867edb0839bd035e10e0fda5d1c23174','url':'assets/sprites/shield.png'},{'revision':'ee998a7f058783b92e7b0a541fc7ab27','url':'assets/sprites/shieldWhite.png'},{'revision':'8d30794553158d89734d740445d4b9dc','url':'assets/sprites/shieldd.png'},{'revision':'8fc96fc7bc1f848d58060817cab71e70','url':'assets/sprites/smoke-puff.png'},{'revision':'756adaf2de298928d681e5d57081295e','url':'assets/sprites/smoke0.png'},{'revision':'52ebc2ffed900e4ea85408cd6f9f2d77','url':'assets/sprites/tank-blue.png'},{'revision':'edb6b872c01ac9e6aebe58e31da2fc25','url':'assets/sprites/tank-red.png'},{'revision':'7ff86b3972791dbf6d97b536484de48b','url':'assets/sprites/tank/E-100_preview.png'},{'revision':'8445082c0bd705f79d9a51ef48ad4d5f','url':'assets/sprites/tank/E-100_strip2.png'},{'revision':'cc0dc15a088dfb77b0068f321cac742c','url':'assets/sprites/tank/KV-2_preview.png'},{'revision':'8aa51bd2bcbcd4cfa64e86e532c3e3a8','url':'assets/sprites/tank/KV-2_strip2.png'},{'revision':'151d2aa60ee4d5fd72ca134645c67fd0','url':'assets/sprites/tank/M-6_preview.png'},{'revision':'d4ae5c9ad346d2538ab1dab31c1a2c3d','url':'assets/sprites/tank/M-6_strip2.png'},{'revision':'b0824b3f31cac234ca47c694af2dad34','url':'assets/sprites/tank/Pz.Kpfw.IV-G_preview.png'},{'revision':'ee58554b277788fe3440b6adb2230962','url':'assets/sprites/tank/Pz.Kpfw.IV-G_strip2.png'},{'revision':'70ad280362a3809a0d58ce9e1299d714','url':'assets/sprites/tank/Pz.Kpfw.IV_preview.png'},{'revision':'d08112f482b591deef42fbf15b81521e','url':'assets/sprites/tank/Pz.Kpfw.IV_strip2.png'},{'revision':'9e540636fbfd26df9744cb40f88a9e2b','url':'assets/sprites/tank/T34_preview.png'},{'revision':'7ab62059136a277e1fd5e6220c392171','url':'assets/sprites/tank/T34_strip2.png'},{'revision':'2454813333ad665da47cda7bdb542649','url':'assets/sprites/tank/Tiger-II_preview.png'},{'revision':'cea617b596597cf8c3e3376bddd6dce2','url':'assets/sprites/tank/Tiger-II_strip2.png'},{'revision':'37ab8555e5e74233999a8b513976625f','url':'assets/sprites/tank/VK.3601h_preview.png'},{'revision':'2c464c574066ba04d29cc3a7ff647ef9','url':'assets/sprites/tank/VK.3601h_strip2.png'},{'revision':'cb09abcbe3792a0b7931d47266d398cd','url':'assets/sprites/victory.jpeg'},{'revision':'04a17540b8e450aafe9e044d04b136ca','url':'assets/sprites/world-of-tanks-tips-main.png'},{'revision':'b4a1e3ed3d95c28564dd346d495f08f7','url':'assets/tiles/tiles.png'},{'revision':'57040e5677322118f6d56a1d9e43c5c6','url':'favicon.ico'},{'revision':'2ffbc23293ee8a797bc61e9c02534206','url':'icons/icons-192.png'},{'revision':'8bdcc486cda9b423f50e886f2ddb6604','url':'icons/icons-512.png'},{'revision':'b1e915f9cdc16f70b3786dd22af22850','url':'index.html'},{'revision':null,'url':'main.96b798358d6fec4ddd5a.bundle.js'},{'revision':'bce522c56cb3f14ea2e70f00ad566f9d','url':'main.96b798358d6fec4ddd5a.bundle.js.LICENSE.txt'},{'revision':'ff0d08eca92dee1c2fc3a94297f58aeb','url':'manifest.json'},{'revision':null,'url':'vendors.a55516764d70f3019cf4.bundle.js'},{'revision':'7eeeb40cd197290381f9e39d818d4f73','url':'vendors.a55516764d70f3019cf4.bundle.js.LICENSE.txt'}],m().precache(U),function(t){const s=m();!function(t,s,a){let n;if("string"==typeof t){const e=new URL(t,location.href);n=new R((({url:t})=>t.href===e.href),s,a)}else if(t instanceof RegExp)n=new v(t,s,a);else if("function"==typeof t)n=new R(t,s,a);else{if(!(t instanceof R))throw new e("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});n=t}(b||(b=new C,b.addFetchListener(),b.addCacheListener()),b).registerRoute(n)}(new q(s,t))}(undefined)})()})();